services:
  user-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - user_db_data:/var/lib/postgresql/data
      - ./init-scripts/user-db:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - microservice-network
    restart: unless-stopped

  order-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: orders_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - order_db_data:/var/lib/postgresql/data
      - ./init-scripts/order-db:/docker-entrypoint-initdb.d
    ports:
      - "5434:5432"
    networks:
      - microservice-network
    restart: unless-stopped


  user-service:
    build: ./user-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/users_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
    ports:
      - "8081:8080"
    networks:
      - microservice-network
    depends_on:
      - user-db
    restart: on-failure

  order-service:
    build: ./order-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://order-db:5432/orders_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      CLIENT_USER_SERVICE_URL: http://user-service:8080/api/users
    ports:
      - "8082:8080"
    networks:
      - microservice-network
    depends_on:
      - order-db
      - user-service
    restart: on-failure


volumes:
  user_db_data:
  order_db_data:

networks:
  microservice-network:
    driver: bridge